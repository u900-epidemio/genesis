def checkProfileMultipath(path){
  if (new File(path).exists()){
    File directory = new File(path)
    def contents = []
    directory.eachFileRecurse (groovy.io.FileType.FILES) { file -> contents << file }
    if (!path?.trim() || contents == null || contents.size() == 0){
      println "   ### ERROR ###   The option '-profile multipath' requires the configuration of each tool path. See `--globalPath` for advanced usage."
      System.exit(-1)
    }
  }else{
    println "   ### ERROR ###   The option '-profile multipath' requires the configuration of each tool path. See `--globalPath` for advanced usage."
    System.exit(-1)
  }
}

singularity {
  enabled = false
}

docker {
  enabled = false
}

process {
  checkProfileMultipath("${params.geniac.multiPath}")
  withLabel:python { beforeScript = "export PATH=${params.geniac.multiPath}/python/bin:$PATH" }
  withLabel:multiqc { beforeScript = "export PATH=${params.geniac.multiPath}/multiqc/bin:$PATH" }
  withLabel:fastqc { beforeScript = "export PATH=${params.geniac.multiPath}/fastqc/bin:$PATH" }

  withLabel:trimgalore { beforeScript = "export PATH=${params.geniac.multiPath}/trimgalore/bin:$PATH" }
  withLabel:bwa { beforeScript = "export PATH=${params.geniac.multiPath}/bwa/bin:$PATH" }
  withLabel:samtools { beforeScript = "export PATH=${params.geniac.multiPath}/samtools/bin:$PATH" }
  withLabel:bedtools { beforeScript = "export PATH=${params.geniac.multiPath}/bedtools/bin:$PATH" }
  withLabel:qualimap { beforeScript = "export PATH=${params.geniac.multiPath}/qualimap/bin:$PATH" }
  withLabel:gatk { beforeScript = "export PATH=${params.geniac.multiPath}/gatk/bin:$PATH" }
  withLabel:bcftools { beforeScript = "export PATH=${params.geniac.multiPath}/bcftools/bin:$PATH" }
  withLabel:snpeff { beforeScript = "export PATH=${params.geniac.multiPath}/snpeff/bin:$PATH" }
  withLabel:snpsift { beforeScript = "export PATH=${params.geniac.multiPath}/snpsift/bin:$PATH" }
  withLabel:vcfanno { beforeScript = "export PATH=${params.geniac.multiPath}/vcfanno/bin:$PATH" }
  withLabel:bgzip { beforeScript = "export PATH=${params.geniac.multiPath}/bgzip/bin:$PATH" }
}
